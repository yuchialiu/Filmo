extends layout.pug 

block head
  link(rel='stylesheet', href='/public/assets/css/login.css', type='text/css')

  link(rel="stylesheet" href="https://unicons.iconscout.com/release/v2.1.9/css/unicons.css")
  script(src="https://unpkg.com/validator@latest/validator.min.js") 


block content 
  body 
  div#main
    .section
      .container
        .row.full-height.justify-content-center
          .col-12.text-center.align-self-center.py-5
            .section.pb-5.pt-5.pt-sm-2.text-center
              h6.mb-0.pb-3
                span #{lang.account.login}
                span #{lang.account.signup}
              input#reg-log.checkbox(type='checkbox', name='reg-log')
              label(for='reg-log', style="font-family: 'unicons'")
              .card-3d-wrap.mx-auto
                .card-3d-wrapper
                  .card-front
                    .center-wrap
                      .section.text-center
                        h4.mb-4.pb-3 #{lang.account.login}
                        .form-group
                          input#logemail.form-style(type='email', name='logemail', placeholder=`${lang.account.your_email}`, autocomplete='off', maxlength='30', value='ellie@gmail.com') 
                          i.input-icon.uil.uil-at
                        .form-group.mt-2
                          input#logpass.form-style(type='password', name='logpass', placeholder=`${lang.account.your_password}`, autocomplete='off', maxlength='20', value='12345678')
                          i.input-icon.uil.uil-lock-alt
                        button#sign_in_button.button.mt-4(type="button") #{lang.submit}
                        //- p.mb-0.mt-4.text-center
                        //-   a.link(href='#0') Forgot your password?
                  .card-back
                    .center-wrap
                      .section.text-center
                        h4.mb-4.pb-3 #{lang.account.signup}
                        .form-group
                          input#regisname.form-style(type='text', name='regisname', placeholder=`${lang.account.your_username}`, autocomplete='off', maxlength='8')
                          i.input-icon.uil.uil-user
                        .form-group.mt-2
                          input#regisemail.form-style(type='email', name='regisemail', placeholder=`${lang.account.your_email}`, autocomplete='off', maxlength='30')
                          i.input-icon.uil.uil-at
                        .form-group.mt-2
                          input#regispass.form-style(type='password', name='regispass', placeholder=`${lang.account.your_password}`, autocomplete='off', maxlength='20')
                          i.input-icon.uil.uil-lock-alt
                        button#sign_up_button.button.mt-4(type="button") #{lang.submit}

  script(type='text/javascript').

    //Sign in

    async function signin(event){
      event.preventDefault()

      if ( $('#logemail').val() == "" || $('#logpass').val() == "" ) {
        swal.fire({
          icon: 'warning', 
          text: "Please fill in all blank before login",
          confirmButtonColor: '#ec7aa0',
        });
        return
      } 
      if (!validator.isEmail($('#logemail').val())) {
        swal.fire({icon: 'warning', 
        text:'Please input valid email format',
        confirmButtonColor: '#ec7aa0',          
        });
        return
      }

      try{
        const signin_response = await axios({
          method: 'POST',
          url: '/api/1.0/user/signin',
          responseType: 'json',
          data: {
              email: $('#logemail').val(),
              password: $('#logpass').val()
          }
          })

        //- console.log(signin_response);

        if (locale == 'en-US'){
          swal.fire({
            icon: 'success', 
            text: 'Log in successfully! ',
            showConfirmButton: false,
          })      
        } else if (locale == 'zh-TW') {
          swal.fire({
            icon: 'success', 
            text: '登入成功! ',
            showConfirmButton: false,
          })              
        } else if (locale == 'fr-FR') {
          swal.fire({
            icon: 'success', 
            text: 'Connectez-vous avec succès! ',
            showConfirmButton: false,
          })             
        }  
        setTimeout(() => {
          window.location.href = `/profile?locale=${locale}`
        }, '1000');           
      } catch(error) {
        //- console.log(error);
        if (locale == 'en-US'){
          swal.fire({icon: 'warning', 
          //- text: err.response.data.error, // This email hasn't been registered
          text: 'Email or password is wrong', 
          confirmButtonColor: '#ec7aa0',          
          });         
        } else if (locale == 'zh-TW') {
          swal.fire({icon: 'warning', 
          text: '帳號或密碼有誤',
          confirmButtonColor: '#ec7aa0',          
          });          
        } else if (locale == 'fr-FR') {
          swal.fire({icon: 'warning', 
          text: 'e-mail ou le mot de passe est erroné',
          confirmButtonColor: '#ec7aa0',          
          });          
        }
        setTimeout(() => {
          location.reload();
        }, '800');            
      }
    }

    $('#sign_in_button').on('click', signin);
    $("#logemail").keypress(function(e){
      code = (e.keyCode ? e.keyCode : e.which);
      if (code == 13)
      {
        signin(event)
      }
    });     
    $("#logpass").keypress(function(e){
      code = (e.keyCode ? e.keyCode : e.which);
      if (code == 13)
      {
        signin(event)
      }
    });

    //Sign up

    async function signup(event){
      event.preventDefault()
      // Empty Validation
      if ($('#regisname').val() == "" || $('#regisemail').val() == "" ||  $('#regispass').val() == "") {
          swal.fire({icon: 'warning',text: "Please fill in all blank before register", confirmButtonColor: '#ec7aa0'});
          return
      }
      // Email Validation
      if (!validator.isEmail($('#regisemail').val())) {
        swal.fire({icon: 'warning', text: 'Please input valid email format', confirmButtonColor: '#ec7aa0'});
        return
      }
      if (!validator.isLength($('#regisemail').val(), {min:6, max:30})) {
        swal.fire({icon: 'warning', text: 'Email must be between 6 and 30 characters', confirmButtonColor: '#ec7aa0'});
        return
      }
      // Username Validation
      if(!validator.isAlphanumeric($('#regisname').val())) {
        console.log()
        swal.fire({icon: 'warning', text: 'Username must be alphanumeric', confirmButtonColor: '#ec7aa0'});
        return
      }
      if(!validator.isLength($('#regisname').val(), {min:3}) ) {
        swal.fire({icon: 'warning', text: 'Username must be at least 3 characters', confirmButtonColor: '#ec7aa0'});
        return
      }
      if(!validator.isLength($('#regisname').val(), {max:8}) ) {
        swal.fire({icon: 'warning', text: 'Username must be no more than 8 characters', confirmButtonColor: '#ec7aa0'});
        return
      }
      // Password Validation
      if(!validator.isAlphanumeric($('#regispass').val())) {
        swal.fire({icon: 'warning', text: 'Password must be alphanumeric', confirmButtonColor: '#ec7aa0'});
        return
      }    
      if(!validator.isLength($('#regispass').val(), {min:6}) ) {
        swal.fire({icon: 'warning', text: 'Password must be at least 6 characters', confirmButtonColor: '#ec7aa0'});
        return
      }
      if(!validator.isLength($('#regispass').val(), {max:20}) ) {
        swal.fire({icon: 'warning', text: 'Password must be no more than 20 characters', confirmButtonColor: '#ec7aa0'});
        return
      }            

      try{
        const signup_response = await axios({
            method: 'POST',
            url: '/api/1.0/user/signup',
            responseType: 'json',
            data: {
              username: $('#regisname').val(),
              email: $('#regisemail').val(),
              password: $('#regispass').val()
            }
        })

        swal.fire({
          icon: 'success', 
          text: 'Sign up successfully! ',
          showConfirmButton: false,
          timer: 1000,
        })
        setTimeout(() => {
          window.location.href = `/profile?locale=${locale}`
        }, '1000');         
      } catch(error) {
        console.log(error);
        let err_alert = error.response.data.error;
        swal.fire({
          text: err_alert,
          confirmButtonColor: '#ec7aa0',          
        });
      }
    }
    $('#sign_up_button').on('click', signup);

    $("#regispass").keypress(function(e){
      code = (e.keyCode ? e.keyCode : e.which);
      if (code == 13)
      {
        signup(event)
      }
    });
