extends layout.pug 

block head
  link(rel='stylesheet', href='/public/assets/css/review.css', type='text/css')
  link(rel='stylesheet', href='/public/assets/css/profile.css', type='text/css')
  //- link(rel='stylesheet', href='/public/assets/css/save_button.css', type='text/css')

block content 
  body 
    div.main_outer
      div(id="sidebar-container" class="sidebar-expanded d-none d-md-block")
        ul(class="list-group")
          a(href="#" data-toggle="sidebar-colapse" class="bg-dark list-group-item list-group-item-action d-flex align-items-center")
            div(class="d-flex w-100 justify-content-start align-items-center")
              span#collapse-icon.fa.fa-2x.mr-3
              span#collapse-text.menu-collapsed #{lang.account.collapse}
          a(href=`/profile?locale=${locale}` class="menu-collapsed d-flex w-100 justify-content-start align-items-center")
            i(class="fas fa-user-circle")
            span.tablinks #{lang.account.my_account}
          a#sidebar_selected(href=`/profile/review?locale=${locale}` class="menu-collapsed d-flex w-100 justify-content-start align-items-center")  
            i(class="fas fa-book-reader")
            span.tablinks#sidebar_selected_text #{lang.account.my_reviews}
          a(href=`/store/review?locale=${locale}` class="menu-collapsed d-flex w-100 justify-content-start align-items-center")
            i(class="fas fa-newspaper")
            span.tablinks  #{lang.account.saved_reviews}
          a(href=`/store/movie?locale=${locale}` class="menu-collapsed d-flex w-100 justify-content-start align-items-center")
            i(class="fas fa-film")
            span.tablinks #{lang.account.saved_movies}
          a(class="menu-collapsed d-flex w-100 justify-content-start align-items-center")
            i(class="fas fa-sign-out-alt")
            button(type='button')#logout_btn #{lang.account.logout}

      - if (!data.length) 
        h3.no_data_title #{lang.account.no_submitted_review} 
      - else     
        div.outer_review_account
          - for (let i = 0; i < data.length ; i++)
            div.review_account(class='card text-white bg-dark mb-300' style="max-width: 650px;")
              div.item_movie.d-flex.flex-row(class='card-header')
                div.user
                  -if (data[i].profile_image =='https://d2idt211kyg8ql.cloudfront.net/images/uploads/null')
                    div
                  -else
                    div#picture_outline
                      img.profile_img(src= `${data[i].profile_image}`, alt='Profile Image')
                    div.name_date
                      p.username #{data[i].username}
                div.ms15
                  h4.review_title #{data[i].review_title}                    
                  p.movie_title #{data[i].title}    

                div.buttons
                  div.update_review
                    a(href=`/review/update?id=${data[i].review_id}&locale=${locale}`) 
                      button.update_review_button(type='button' value=`${data[i].review_id}`) #{lang.edit}
                  div.delete_review
                    button.delete_review_button(type='submit' value=`${data[i].review_id}`) #{lang.delete}

              div.d-flex.flex-row(class='card-body')
                a(href=`/movie?id=${data[i].movie_id}&locale=${locale}`)
                  img.movie_poster_account(src=`${data[i].poster}`, alt='Poster') 
                p.review_text(class="card-text") #{data[i].content}
                    
              div.bottom
                p.review_created_dt(class='card-footer') #{data[i].created_dt}  

                //- p.review_num Review# #{data[i].id}
                //- p.review_updated_dt Updated at #{data[i].updated_dt}
                  //- div                 
                //-   img.review_img(src=`${data[i].image}`, alt='')

  script(src='/public/assets/js/profile_sidebar.js')

  script(type='text/javascript').
    $(async () => {
      const locale = !{ locale_string };
      //- let locale = !{locale}

      // logout
      $('#logout_btn').on('click', async (e) => {
        e.preventDefault();        
        try {
          await axios({
            method: 'get',
            url: '/api/1.0/user/logout',
          });

          if (locale == 'en-US'){
            swal.fire({
              icon: 'success', 
              text: 'You\'ve successfully logged out',
              showConfirmButton: false,
            })     
          } else if (locale == 'zh-TW') {
            swal.fire({
              icon: 'success', 
              text: '您已登出',
              showConfirmButton: false,
            })            
          } else if (locale == 'fr-FR') {
            swal.fire({
              icon: 'success', 
              text: 'Vous vous êtes déconnecté',
              showConfirmButton: false,
            })            
          }
          setTimeout(() => {
              window.location.href = `/home?locale=${locale}`;
          }, '1000');
        } catch (err) {
          console.log(err);
          swal.fire(err.response.data.message);
        }
      });


      $('.delete_review_button').on('click', async (e) => {
        e.preventDefault(); 
        let review_id = e.target.value;

          if (locale == 'en-US'){
            swal.fire({
              icon: 'warning',
              text: 'Please confirm delete',
              showConfirmButton: true,
              confirmButtonColor: '#ec7aa0', 
              showCancelButton: true,
              cancelButtonColor: '#444444',
            }).then((result) => {
              if (result.isConfirmed) {
                deleteReview(review_id);
              }
            })
          } else if (locale == 'zh-TW') {
            swal.fire({
              icon: 'warning',
              text: '確定刪除評論?',
              showConfirmButton: true,
              confirmButtonColor: '#ec7aa0', 
              showCancelButton: true,
              cancelButtonColor: '#444444',
            }).then((result) => {
              if (result.isConfirmed) {
                deleteReview(review_id);
              }
            })      
          } else if (locale == 'fr-FR') {
            swal.fire({
              icon: 'warning',
              text: 'Veuillez confirmer la suppression',
              showConfirmButton: true,
              confirmButtonColor: '#ec7aa0', 
              showCancelButton: true,
              cancelButtonColor: '#444444',
            }).then((result) => {
              if (result.isConfirmed) {
                deleteReview(review_id);
              }
            })        
          }

        async function deleteReview(review_id){

          try {
            const data = JSON.stringify({
              review_id,
            });

            const result = await axios({
              method: 'DELETE',
              url: '/api/1.0/user/review',
              data,
              headers: {
                'Content-Type': 'application/json',
              },
            });

            if (locale == 'en-US'){
              swal.fire({
                icon: 'success', 
                text: 'Review Deleted',
                showConfirmButton: false,
              })
            } else if (locale == 'zh-TW') {
              swal.fire({
                icon: 'success', 
                text: '刪除成功',
                showConfirmButton: false,
              })       
            } else if (locale == 'fr-FR') {
              swal.fire({
                icon: 'success', 
                text: 'Supprimé',
                showConfirmButton: false,
              })          
            }
            setTimeout(() => {
                window.location.href = `/profile/review?locale=${locale}` ;
            }, '1000');
          } catch {
            swal.fire(err);
            console.log('err: ', err);
          }
        }
      });    
    });


      //- $('.save_review_button').on('click', async (e) => {
      //-   e.preventDefault(); 
      //-   let review_id = e.target.value;
      //-   console.log(review_id)

      //-   try {
      //-     const data = JSON.stringify({
      //-       review_id,
      //-     });

      //-     const result = await axios({
      //-       method: 'POST',
      //-       url: '/api/1.0/user/store/review',
      //-       data,
      //-       headers: {
      //-         'Content-Type': 'application/json',
      //-       },
      //-     });
      //-     alert('test')
      //-     //- window.location.href = `/store/review?locale=${locale}` ;

      //-   } catch {
      //-     alert(err);
      //-     console.log('err: ', err);
      //-   }

      //- });

    //- let token = localStorage.getItem('Authorization');
    
    //- window.addEventListener('load', async function (event) {
    //-   try {        
    //-   if (!token) {
    //-     alert("please sign in or sign up first");
    //-     console.log("no token, please sign in or sign up first");
    //-     window.location.href = "login";
    //-     return;
    //-   }
    //-   await auth_member();
    //-   showReviewByAccount(auth_result);
    //- } catch(err) {
    //-   console.log(err);
    //- }
    //- });

    //- //authorize member
    //- let auth_result;
    //- const locale = document.URL.split("=")[1];


    //-   async function auth_member() {
    //-   try {
    //-     auth_result = await axios({
    //-       method: 'GET',
    //-       url: `/api/1.0/user/review?locale=${locale}`,
    //-       responseType: 'json',
    //-       headers: {
    //-         Authorization: `${localStorage.getItem('Authorization')}`,
    //-       },
    //-       });

    //-     return auth_result;
    //-   } catch(err) { 
    //-     console.log(err);
    //-   }
    //- }

    //- function showReviewByAccount(auth_result){
    //-   let info = auth_result.data.data;
    //-   console.log(info)

    //-   for (let i in info){
        //- const d = $('<div></div>').addClass('review_div')
        //- const a_review = $('<a></a>').attr('href', `/review_info?id=${info[i].id}&locale=en-US`)
        //- const h3_review = $('<p></p>').addClass('review_num').html(`review# ${info[i].id}`)

        //- const img_review = $('<img>').addClass('review_img').attr('src', info[i].image)
        //- const p_content = $('<p></p>').addClass('review_content').html(info[i].content)
        //- const p_created = $('<p></p>').addClass('review_created_dt').html(`created at ${(info[i].created_dt).slice(0,10)}`)
        //- const p_updated = $('<p></p>').addClass('review_updated_dt').html(`updated at ${(info[i].updated_dt).slice(0,10)}`)

        //- const a_movie = $('<a></a>').attr('href', `/movie?id=${info[i].movie_id}&locale=${locale}`)
        //- const h3_movie = $('<p></p>').addClass('movie_title').html(info[i].title)
        //- const img_movie = $('<img>').addClass('movie_poster').attr('src', info[i].poster)

        //- let div_review = a_review
        //- div_review = div_review.append(a_review)
        //- div_review = div_review.append(h3_review)
        //- div_review = div_review.append(img_review)
        //- div_review = div_review.append(p_content)
        //- div_review = div_review.append(p_created)
        //- div_review = div_review.append(p_updated)


    //-     let div_movie = a_movie 
    //-     div_movie = div_movie.append(h3_movie)
    //-     div_movie = div_movie.append(img_movie)

    //-     $('#myReviews').append(d)
    //-     $('#myReviews').append(div_review)


    //-     $('#myReviews').append(div_movie)        

    //-   }
    //- }