extends layout.pug 

block head
  link(rel='stylesheet', href='/public/assets/css/review.css', type='text/css')
  script(src='https://code.jquery.com/jquery-3.5.1.min.js', type="text/javascript")
  script(src='https://unpkg.com/axios/dist/axios.min.js')
  

block content 
  body 
  .tab
    a(href=`/profile?locale=${data.locale}`)
      button.tablinks My Account
    a(href=`/profile/review?locale=${data.locale}`)  
      button.tablinks My Reviews
    a(href=`/store/review?locale=${data.locale}`)
      button.tablinks Saved Reviews
    a(href=`/store/movie?locale=${data.locale}`)
      button.tablinks Saved Movies
  
  div#myReviews 
    - for (let i = 0; i < data.length ; i++)
      a(href=`/review/info?id=${data[i].id}&locale=${data.locale}`)
        p.review_num Review# #{data[i].id}

      img.review_img(src=`${data[i].image}`, alt='')
      h3.review_title #{data[i].review_title}
      p.review_content #{data[i].content}
      p.review_created_dt Created at #{data[i].created_dt}
      p.review_updated_dt Updated at #{data[i].updated_dt}

      a(href=`/movie?id=${data[i].movie_id}&locale=${data.locale}`)
        p.movie_title #{data[i].title}
        img.movie_poster(src=`${data[i].poster}`, alt='')

      div.update_review
        a(href=`/review/update?id=${data[i].id}&locale=${data.locale}`) 
          button.update_review_button(type='button') Edit Review

      div.delete_review
        button.delete_review_button(type='submit' value=`${data[i].id}`) Delete Review

      div.save_review
        button.save_review_button(type='submit' value=`${data[i].id}`) Save Review


  script(type='text/javascript').

    let locale = !{locale}

    $('.save_review_button').on('click', async (e) => {
      e.preventDefault(); 
      let review_id = e.target.value;
      console.log(review_id)

      try {
        const data = JSON.stringify({
          review_id,
        });

        const result = await axios({
          method: 'POST',
          url: '/api/1.0/user/store/review',
          data,
          headers: {
            'Content-Type': 'application/json',
          },
        });
        alert('review saved successfully')
        window.location.href = `/store/review?locale=${locale}` ;

      } catch {
        alert('review saved or not existed');
        console.log('err: ', err);
      }

    });

    $('.delete_review_button').on('click', async (e) => {
      e.preventDefault(); 
      let review_id = e.target.value;
      console.log(review_id)

      try {
        const data = JSON.stringify({
          review_id,
        });

        const result = await axios({
          method: 'DELETE',
          url: '/api/1.0/user/review',
          data,
          headers: {
            'Content-Type': 'application/json',
          },
        });
        alert('review deleted successfully')
        window.location.href = `/profile/review?locale=${locale}` ;

      } catch {
        alert('review deleted or not existed');
        console.log('err: ', err);
      }

    });    
    //- let token = localStorage.getItem('Authorization');
    
    //- window.addEventListener('load', async function (event) {
    //-   try {        
    //-   if (!token) {
    //-     alert("please sign in or sign up first");
    //-     console.log("no token, please sign in or sign up first");
    //-     window.location.href = "login";
    //-     return;
    //-   }
    //-   await auth_member();
    //-   showReviewByAccount(auth_result);
    //- } catch(err) {
    //-   console.log(err);
    //- }
    //- });

    //- //authorize member
    //- let auth_result;
    //- const locale = document.URL.split("=")[1];


    //-   async function auth_member() {
    //-   try {
    //-     auth_result = await axios({
    //-       method: 'GET',
    //-       url: `/api/1.0/user/review?locale=${locale}`,
    //-       responseType: 'json',
    //-       headers: {
    //-         Authorization: `${localStorage.getItem('Authorization')}`,
    //-       },
    //-       });

    //-     return auth_result;
    //-   } catch(err) { 
    //-     console.log(err);
    //-   }
    //- }

    //- function showReviewByAccount(auth_result){
    //-   let info = auth_result.data.data;
    //-   console.log(info)

    //-   for (let i in info){
        //- const d = $('<div></div>').addClass('review_div')
        //- const a_review = $('<a></a>').attr('href', `/review_info?id=${info[i].id}&locale=en-US`)
        //- const h3_review = $('<p></p>').addClass('review_num').html(`review# ${info[i].id}`)

        //- const img_review = $('<img>').addClass('review_img').attr('src', info[i].image)
        //- const p_content = $('<p></p>').addClass('review_content').html(info[i].content)
        //- const p_created = $('<p></p>').addClass('review_created_dt').html(`created at ${(info[i].created_dt).slice(0,10)}`)
        //- const p_updated = $('<p></p>').addClass('review_updated_dt').html(`updated at ${(info[i].updated_dt).slice(0,10)}`)

        //- const a_movie = $('<a></a>').attr('href', `/movie?id=${info[i].movie_id}&locale=${locale}`)
        //- const h3_movie = $('<p></p>').addClass('movie_title').html(info[i].title)
        //- const img_movie = $('<img>').addClass('movie_poster').attr('src', info[i].poster)

        //- let div_review = a_review
        //- div_review = div_review.append(a_review)
        //- div_review = div_review.append(h3_review)
        //- div_review = div_review.append(img_review)
        //- div_review = div_review.append(p_content)
        //- div_review = div_review.append(p_created)
        //- div_review = div_review.append(p_updated)


    //-     let div_movie = a_movie 
    //-     div_movie = div_movie.append(h3_movie)
    //-     div_movie = div_movie.append(img_movie)

    //-     $('#myReviews').append(d)
    //-     $('#myReviews').append(div_review)


    //-     $('#myReviews').append(div_movie)        

    //-   }
    //- }